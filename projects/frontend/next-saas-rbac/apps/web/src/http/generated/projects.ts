/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Next.js SaaS
 * Full-stack SaaS app with multi-tenant & RBAC.
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod'


/**
 * @summary Create an new project
 */
export const createProjectParams = zod.object({
  "slug": zod.string()
})

export const createProjectBody = zod.object({
  "name": zod.string(),
  "description": zod.string()
})

/**
 * @summary Get all organization projects
 */
export const getProjectsParams = zod.object({
  "slug": zod.string()
})

export const getProjectsResponse = zod.object({
  "projects": zod.array(zod.object({
  "id": zod.string().uuid(),
  "description": zod.string(),
  "name": zod.string(),
  "slug": zod.string(),
  "avatarUrl": zod.string().nullable(),
  "organizationId": zod.string().uuid(),
  "ownerId": zod.string().uuid(),
  "createdAt": zod.string().datetime(),
  "owner": zod.object({
  "id": zod.string().uuid(),
  "name": zod.string().nullable(),
  "email": zod.string(),
  "avatarUrl": zod.string().nullable()
})
}))
})

/**
 * @summary Delete a project
 */
export const deleteProjectParams = zod.object({
  "slug": zod.string(),
  "projectId": zod.string().uuid()
})

/**
 * @summary Get project details
 */
export const getProjectParams = zod.object({
  "orgSlug": zod.string(),
  "projectSlug": zod.string()
})

export const getProjectResponse = zod.object({
  "project": zod.object({
  "id": zod.string().uuid(),
  "description": zod.string(),
  "name": zod.string(),
  "slug": zod.string(),
  "avatarUrl": zod.string().nullable(),
  "organizationId": zod.string().uuid(),
  "ownerId": zod.string().uuid(),
  "owner": zod.object({
  "id": zod.string().uuid(),
  "name": zod.string().nullable(),
  "email": zod.string(),
  "avatarUrl": zod.string().nullable()
})
})
})

